name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    branches: [ "main" ]
    types: [completed]

env:
  # Variáveis de Ambiente para o Deploy
  RESOURCE_GROUP: rg-fcg-payments
  CONTAINER_APP_NAME: fnc-fcg-payments
  # Este caminho deve apontar para a PASTA que contém o seu Dockerfile e o .csproj
  APP_SOURCE_PATH: ./FCGPagamentos.Worker

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read # Necessário para o checkout
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # ATENÇÃO: Os passos de DOTNET BUILD, RESTORE e PUBLISH são INÚTEIS aqui.
      # O 'azure/container-apps-deploy-action' fará o build DENTRO do contêiner.
      # Removendo esses passos, você economiza tempo e recursos no seu pipeline.

      - name: Azure Login (OIDC - UAMI)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      # 1. Instala a extensão Containerapp
      - name: Install Container Apps Extension
        run: az extension add --name containerapp --upgrade

      # 2. Deploy para Azure Container Apps
      # Esta AÇÃO faz o build, push para o ACR gerenciado e a criação da nova revisão.
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          # Grupo e Nome da Function App no ACA
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          
          # Caminho do código-fonte onde o Dockerfile deve estar
          appSourcePath: ${{ env.APP_SOURCE_PATH }}
          
          # Para garantir que o build .NET seja feito corretamente
          buildContainerInAzure: true 
          # O build será feito no Azure usando o ACR gerenciado.
          
      # O passo 'Deploy to Azure Functions' (Azure/functions-action@v1) FOI REMOVIDO.
